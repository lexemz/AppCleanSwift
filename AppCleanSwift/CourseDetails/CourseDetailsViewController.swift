//
//  CourseDetailsViewController.swift
//  AppCleanSwift
//
//  Created by Igor on 10.04.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CourseDetailsDisplayLogic: AnyObject {
    func displayCourseDetails(viewModel: CourseDetails.ShowDetails.ViewModel)
}

class CourseDetailsViewController: UIViewController {
        
    @IBOutlet var courseImageView: UIImageView!
    @IBOutlet var lessonsCountLabel: UILabel!
    @IBOutlet var testsCountLabel: UILabel!
    @IBOutlet var likeButton: UIButton!
    
    var interactor: CourseDetailsBusinessLogic?
    var router: (NSObjectProtocol & CourseDetailsRoutingLogic & CourseDetailsDataPassing)?
    var course: Course!
    
    // Данная сцена отображается при переходе
    // В инициализаторах вызывается метод для сборки сцены
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        
        passRequest()
    }
    
    @IBAction func likeButtonIsPressed(_ sender: Any) {
        
    }
    
    private func passRequest() {
        let request = CourseDetails.ShowDetails.Request(course: course)
        interactor?.provideCourseDetails(request: request)
    }
    
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = CourseDetailsInteractor()
        let presenter = CourseDetailsPresenter()
        let router = CourseDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
}

extension CourseDetailsViewController: CourseDetailsDisplayLogic {
    func displayCourseDetails(viewModel: CourseDetails.ShowDetails.ViewModel) {
        title = viewModel.courseName
        lessonsCountLabel.text = viewModel.lessonsCount
        testsCountLabel.text = viewModel.testsCount
        courseImageView.image = UIImage(data: viewModel.imageData)
        
        likeButton.tintColor = viewModel.isFavorite ? .red : .gray
    }
}
